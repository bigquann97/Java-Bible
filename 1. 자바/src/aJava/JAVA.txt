1. 자바(Java Programming Language)

1.1 자바란?
썬 마이크로시스템즈 개발 - 객체지향 프로그래밍 언어
운영체제에 독립적
풍부한 클래스 라이브러리(Java API)를 통해 프로그래밍에 필요한 요소 기본 제공

1.2 자바의 역사
제임스 고슬링 - C++의 확장 - Appliance 에의 확장성
소규모 가전제품 ~ 대규모 기업환경 - 안드로이드에서 Java 사용

1.3 자바언어의 특징
 1. 운영체제에 독립적
  => 자바 응용프로그램은 운영체제, 하드웨어가 아닌 자바가상머신(JVM)과만 통신
  => JVM이 자바 응용프로그램으로부터 전달받은 명령을 해당 운영체제가 이해할 수 있도록 변환 - 운영체제별 다른 JVM
  => Write once, run anywhere
 2. 객체지향 언어이다.
  => 상속, 캡슐화, 다형성이 잘 적용됨
 3. 비교적 배우기 쉽다.
  => C++ 단순화, 객체지향적 설계
 4. 자동 메모리 관리(Garbage Collection)
  => 가비지 컬렉터가 메모리 관리
 5. 네트워크와 분산처리를 지원한다.
  => 다양한 네트워크 프로그래밍 라이브러리(Java API)를 이용 가능
 6. 멀티쓰레드를 지원한다.
  => 관련 라이브러리 제공, 쓰레드에 대한 스케쥴링을 자바 인터프리터가 담당
 7. 동적 로딩을 지원한다.
  => 실행시, 모든 클래스가 로딩되지 않고, 필요한 시점에 클래스를 로딩하여 사용

1.4 JVM(Java Virtual Machine)
자바를 실행하기 위한 가상 컴퓨터 - 자바로 작성된 애플리케이션은 모두 JVM에서만 실행됨
컴퓨터 <=> OS <=> JVM <=> Java 애플리케이션     // Java애플리케이션 소통방식
컴퓨터 <=> OS <=> 일반 애플리케이션             // 일반 애플리케이션
JVM을 한번 더 거치고, 하드웨어에 맞게 완전 컴파일된 상태가 아니며, 실행시 해석되기 때문에 속도가 느림.
일반 애플리케이션은 OS 종속적이지만, Java 애플리케이션은 OS와 하드웨어에 독립적
하지만, JVM엔 OS에 종속적이기 때문에 해당 OS에 맞는 JVM 필요

==========================================================

2. 자바개발환경 구축하기
2.1 자바 개발도구(JDK) 설치하기 - Java Development Kit
(JVM과 자바 클래스 라이브러리(Java API))외 필요한 프로그램들이 설치됨
path 설정 필요 - https://devpad.tistory.com/5
javac, java, javap, javadoc, jar 명령어 사용 가능 - 6p
JDK - 자바 개발도구 // JRE - 자바 실행환경(Java Runtime Environment - 자바로 작성된 응용프로그램이 실행되기 위한 최소 환경
JDK = JRE + 개발에 필요한 실행파일(javac.exe 등) // JRE = JVM + 클래스라이브러리(Java API)

2.2 Java API 문서 설치하기
API문서 설치 및 경로설정 + index.html로 확인가능
https://flyyunha.tistory.com/entry/Java-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%84%B1-2-JAVA-API-%EB%AC%B8%EC%84%9C-Download

==========================================================

3. 자바로 프로그램 작성하기
3.1 Hello.java
자바컴파일러(javac.exe)를 사용해서 소스파일(Hello.java)로부터 클래스파일(Hello.class)를 생성
이후, 자바 인터프리터(java.exe)로 실행한다.
https://zeddios.tistory.com/41
main 메서드의 선언부는 프로그램을 실행할 때 'java.exe'에 의해 호출될 수 있도록 미리 약속된 부분
소스파일의 이름은 public class의 이름과 일치해야한다 - public class 없으면 아무 class나 가능
둘 이상의 public class는 존재불가
소스파일과 달리 클래스파일은 클래스마다 하나씩 만들어짐
=> Hello

3.2 자주 발생하는 에러와 해결 방법

3.3 자바프로그램의 실행 과정
 1. 프로그램의 실행에 필요한 클래스(*.class파일)를 로드한다.
 2. 클래스파일을 검사한다(파일형식, 악성코드 체크)
 3. 지정된 클래스(Hello)에서 main(String[] args)를 호출한다.

3.4 주석(comment)
/* */ or // - 범위주석, 한줄주석
javdoc.exe에 의해 html문서로 자동변환되는 /** ~ */ 주석
큰따옴표 안에는 주석이 아닌 문자열로 인식 - "/* 주석 아님 */"

==========================================================
