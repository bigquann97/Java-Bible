1. 지네릭스 (Generics)
지네릭스 - 다양한 타입 객체 다루는 메서드나 컬렉션 클래스에 컴파일 시 타입 체크 해주는 기능
=> 객체의 타입 안정성 높이고 형변환 번거로움 줄어듦 - 타입체크, 형변환 생략으로 코드 간결
===================================================
1.1 지네릭스란?
메서드, 컬렉션 클래스에 컴파일시 타입 체크
1. 타입의 안정성 제공
2. 타입체크와 형변환 생략을 통해 코드 간결
===================================================
1.2 지네릭 클래스의 선언
클래스와 메서드에 선언 가능 - <T> - 타입 T
T - 타입 변수 - 임의의 참조형 타입을 의미함 - 다른 것 사용 가능
Box<Object> b = new Box<Object>(); => 이전까진 이런 형태로 저장했던 것

지네릭스의 용어
class Box<T> {}
Box<T> - 지네릭 클래스 - T의 Box or T Box
T - 타입 변수 또는 타입 매개변수
Box 원시타입
T 지정 - 지네릭타입 호출
지정된 타입 - 매개변수화된 타입 - parameterized type - 대입된 타입

지네릭스의 제한
T는 인스턴스변수로 간주되기 때문에, static 멤버에 타입변수 T 사용 불가
new 연산자는 컴파일시점에 타입 T가 뭔지 정확히 알아야해서
=> 지네릭 타입의 배열 생성 불가(new T[10]), instanceof 연산자 사용 불가
=> 대신, newInstance()와 같이 동적으로 객체 생성 or Object배열 생성 복사하고 T[] 형변환
===================================================
1.3 지네릭 클래스의 객체 생성과 사용
Box<T> 객체에는 T 타입의 객체만 저장 가능
 1. 참조변수와 생성자에 대입된 타입(매개변수화된 타입)이 일치해야함
 2. 두 타입이 상속관계에 있어도 일치해야함
 3. 두 지네릭 클래스의 타입이 상속 관계에 있고, 대입된 타입이 같은 것은 괜찮음
 4. 자손들은 메서드의 매개변수가 될 수 있음
=> <> 안은 같아야하고, 클래스명의 상속은 따름
=> fruitbox0
===================================================
1.4 제한된 지네릭 클래스
매개변수 T에 지정할 수 있는 타입의 종류를 제한하는 방법
<T extends Fruit> 을 통해 특정 타입의 자손들만 대입할 수 있게 제한
<T extends Fruit & Eatable> 을 통해 인터페이스를 구현해야한다는 제약을 둘 수 있음
=> fruitbox1
===================================================
1.5 와일드 카드
지네릭 타입이 다른 것만으로는 오버로딩이 성립하지 않음 - 메서드 중복 정의
<? extends T> 와일드 카드의 상한 제한 - T와 그 자손들만 가능
<? super T> 와일드 카드의 하한 제한 - T와 그 조상들만 가능
<?> 제한 없음 - 모든 타입이 가능 <? extends Object>와 동일
=> fruitbox2
=> fruitbox3

=> Comparator는 지네릭 메서드 - 매개변수로  <? super T>를 받음
Comparator<? super Apple> : Comparator<Apple>, Comparator<Fruit>, Comparator<Object>
Comparator<? super Grape> : Comparator<Grape>, Comparator<Fruit>, Comparator<Object>
===================================================
1.6 지네릭 메서드
메서드의 선언부에 지네릭 타입이 선언된 메서드 - Collections.sort()
반환타입 바로 앞에 지네릭타입 선언
지네릭 클래스에 정의된 타입 매개변수와 진네릭 메서드에 정의된 타입 매개변수는 전혀 별개의 것
===================================================
1.7 지네릭 타입의 형 변환
지네릭 타입과 넌지네릭 타입간의 형변환은 항상 가능 - 다만 경고 발생
대입된 타입이 다른 지네릭 타입간엔 형변환 불가
===================================================
1.8 지네릭 타입의 제거
- 1. 지네릭타입의 경계(bound)를 제거한다.
- 2. 지네릭 타입을 제거한 후에 타입이 일치하지 않으면 형변환을 추가한다.
===================================================

Optional