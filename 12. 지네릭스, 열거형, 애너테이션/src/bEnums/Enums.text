2. 열거형 (enums)
2.1 열거형이란 ?
서로 관련된 상수를 편리하게 선언하기 위한 것 - 여러 상수를 정의할 때 유용
자바의 열거형은 '타입에 안전한 열거형(typesafe enum)'이라, 실제 값이 같아도 타입 다르면 컴파일 에러
열거형 상수 사용시, 기존 소스 다시 컴파일안해도 됨 - 상수 값이 바뀔때
ordinal - 서수
===================================================
2.2 열거형의 정의와 사용
enum 열거형이름 { 상수명1, 상수명2, ... }
상수간 == 비교 가능, 비교연산자 불가, compareTo()사용가능, switch문 조건식에 사용 가능

모든 열거형의 조상 - java.lang.Enum
.values() .name() .ordinal .valueOf
===================================================
2.3 열거형에 멤버 추가하기
enum Direction { EAST(1), SOUTH(5), WEST(-1), NORTH(10) }; // ; 잊지말기
열거형의 생성자는 외부에서 호출 불가 - 열거형 생성자는 제어자가 묵시적으로 private

열거형에 추상 메서드 추가하기 - abstract 메서드
추상메서드 선언 후 - 각 열거형 상수가 이 추상 메서드를 반드시 구현
===================================================
2.4 열거형의 이해
MyEnum을 통한 구현
class Direction => static final Direction .. 을 통한 선언 - static상수 선언으로 인해 == 비교 가능
abstract class MyEnum<T extends MyEnum<T>> implements Comparable<T> {}
==> EnumEx4