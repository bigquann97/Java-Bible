4. 싱글쓰레드와 멀티쓰레드
하나의 쓰레드 - 한 작업을 마친 후 다른 작업 시작
두개의 쓰레드 - 번갈아 작업해 동시에 처리되는것 같이
=> 수행한 시간은 거의 같음 - 오히려 작업전환 시간이 더 걸림
=> 싱글코어에서 단순히 CPU만 사용하는 계산작업이면 싱글쓰레드로 프로그래밍 하는 것이 더 효율적
=> ThreadEx4.java, ThreadEx5.java
=> 작업전환시간 + 한 쓰레드가 화면에 출력하는 동안 다른 쓰레드는 출력이 끝나기를 기다려야하는데, 이때 발생하는 대기시간

싱글코어의 경우, 멀티쓰레드라도 하나의 코어가 번갈아가며 작업 수행 - 작업이 겹치지 않음
멀티코어의 경우, 멀티쓰레드로 두 작업을 하면, 동시에 두 쓰레드가 수행될 수 있음 - 겹치는 부분 발생 - 두 쓰레드가 경쟁하게 됨
프로그램이 OS의 프로세스 스케줄러 영향을 받음 - 실행 순서, 실행시간 결정 - 프로세스, 쓰레드에 할당되는 시간 일정하지 않음 - 불확실성

두 쓰레드가 서로 다른 자원 사용시 - 싱글쓰레드 프로세스보다 멀티쓰레드 프로세스가 더 효율적 - 데이터입력받기, 네트워크 파일주고받기..
=> ThreadEx6.java, ThreadEx7.java

5. 쓰레드의 우선순위
쓰레드는 우선순위(priority) 라는 속성(멤버변수)을 가짐 - 중요도에 따라 쓰레드 우선순위 다르게 지정해 특정 쓰레드가 더 많은 작업시간 갖도록

* 쓰레드의 우선순위 지정하기
void setPriority(int newPriority) // int getPriority()
public static final int MAX_PRIORITY = 10 // 최대 우선순위
public static final int MIN_PRIORITY = 1 // 최소 우선순위
public static final int NORM_PRIORITY = 5 // 보통 우선순위
쓰레드의 우선순위는 쓰레드를 생성한 쓰레드로부터 상속박는다는 것 - main메서드 쓰레드는 우선순위 5 - main메서드내에 생성하는 쓰레드의 우선순위는 자동적으로 5가 됨
쓰레드 실행 전에만 우선순위 변경 가능
=> ThreadEx8.java

멀티코어에서는 쓰레드의 우선순위에 따른 차이가 거의 없다 - 높은 우선순위면 더 많은 실행시간과 실행 기회를 갖게 될 것

6. 쓰레드 그룹(Thread group)
서로 관련된 쓰레드를 그룹으로 다루기 위함 - 쓰레드 그룹안에 다른 쓰레드그룹 포함 가능
모든 쓰레드는 반드시 쓰레드 그룹에 포함되어 있어야함 - 쓰레드 그룹 지정X 생성자는 자신을 생성한 쓰레드와 같은 쓰레드 그룹에 속함
자바 어플리케이션 실행 - JVM은 main과 system쓰레드그룹 만들고 JVM운영에 필요한 쓰레드들을 생성하 이 쓰레드 그룹에 포함시킴
=> 모든 쓰레드그룹은 main쓰레드 그룹의 하위 쓰레드 그룹이 됨
=> ThreadEx9.java