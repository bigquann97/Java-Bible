9.4 volatile
멀티코어 프로세서에는 코어마다 별도의 캐시 존재
코어는 메모리에서 읽어온 값을 캐시에 저장하고, 캐시에서 값을 읽어서 작업 - 다시 같은 값을 읽어올때는 캐시에 있는지 먼저 확인, 없을때만 메모리에서 읽어옴
메모리에 저장된 변수 값 변경되어도, 캐시에 저장된 값 갱신X - 메모리에 저장된 값이 다른경우
=> stopped값 바뀌어도 쓰레드 멈추지 않고 계속 실행

volatile - 코어가 변수의 값을 읽을때 캐시가 아닌 메모리에서 읽어들임
synchronized - 캐시와 메모리간의 동기화가 이루어져 값의 불일치 해소

*volatile로 long과 double을 원자화
JVM - 데이터를 4 byte 단위 처리 - int, int보다 작은 타입 하나의 명령어로 읽거나 쓰기 가능
하지만 데이터 크기 넘어가면, 하나의 명령어로 값 쓸수 없어 변수 값 읽을때 다른 쓰레드 끼어들 수 있음
=> 상수는 변하지 않는 값 - 멀티쓰레드에 안전 - volatile 안붙여도 되고, 못붙임

volatile - 해당 변수 일기 쓰기 원자화 - 작업 나눌 수 없게함 (synchronized)

9.5 fork & join 프레임웍
다음에 공부할내용