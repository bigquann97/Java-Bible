제어자
클래스, 변수 또는 메서드의 선언부에 함께 사용
접근제어자 - public, protected, default, private
그 외 - static, final, abstract, native, transient, synchronized, volatile, strictfp
여러 제어자 조합가능, 접근 제어자는 하나만 선택 가능

static - 공통적인, 클래스의 => 멤버변수, 메서드, 초기화 블럭( static {})에 사용 가능

final - 변경불가 => 클래스, 메서드, 멤버변수, 지역변수 에서 사용 가능
확장불가 클래스, 오버라이딩불가 메서드, 변경불가 상수
각 인스턴스마다 final이 붙은 멤버변수가 다른 값을 갖도록 하는 것 가능
선언과 함께 초기화하지 않고, 생성자에서 한번만 초기화

abstract - 추상의, 미완의 => 클래스, 메서드에서 사용 가능
선언부만 작성하고 실제 수행내용은 구현X - 추상메서드 선언 - 해당 클래스는 자동으로 추상클래스
=> 해당 클래스는 인스턴스 생성 불가

접근제어자(access modifier) => 멤버 or 클래스에 사용 => 클래스, 멤버변수, 메서드, 생성자에 사용 가능 - 외부접근 제한
private - 같은 클래스 내에서만 접근 가능
default - 같은 패키지 내에서만 접근 가능
protected - 같은 패키지 내에서, 그리고 다른 패키지의 자손 클래스에서 접근 가능
public - 접근 제한이 전혀 없음

클래스 - public, deafult 사용 가능
메서드 - public, protected, default, private 사용 가능
멤버변수 - public, protected, default, private 사용 가능
지역변수 - 없음

접근제어자를 이용한 캡슐화 - 데이터 감추기, 캡슐화
외부로부터 데이터 보호, 외부에 불필요 + 내부적으로만 사용되는 부분 감춤
private, protected로 제한하고 public메서드를 제공해 멤버변수의 값을 다룰 수 있도록 함 - 게터 세터
생성자의 접근제어자 - 외부에서 인스턴스 생성 막음 - Singleton
=> 인스턴스 생성해서 반환시 public메서드 제공하는데, static으로 인스턴스를 반환해주어야함

생성자가 private인 클래스는 다른 클래스의 조상이 될 수 없음 - 클래스 앞에 final추가해 상속불가 클래스임을 알리는 것이 좋음

제어자의 조합 - 접근제어자와 static final abstract
클래스 - public, (default), final, abstract 제어자 사용 가능
메서드 - 모든 접근제어자, final, abstract, static 제어자 사용 가능
멤버변수 - 모든 접근제어자, final, static 제어자 사용 가능
지역변수 - final 제어자 사용 가능

메서드에 static과 abstract를 함쎄 사용할 수 없다
클래스에 abstract와 final을 동시에 사용할 수 없다
abstract메서드의 접근제어자가 private일 수 없다
메서드에 private와 final을 같이 사용할 필요는 없다

다형성 - 여러 형태를 가질 수 있는 능력
한 타입의 참조변수로여러 타입의 객체를 참조 - 조상클래스 타입 참조변수로 자손클래스 인스턴스 참조 가능
참조변수가 사용할 수 있는 멤버의 개수는 인스턴스의 멤버 개수보다 같거나 적어야한다

형변환
자손타입 -> 조상타입 (업캐스팅) : 형변환 생략 가능
자손타입 <- 조상타입 (다운캐스팅) : 형변환 생략 불가
=> instanceof 연산자 사용해 참조변수가 참조하고 있는 실제 인스턴스의 타입 확인 필요

형변환은 참조변수의 타입을 변환하는 것 뿐, 인스턴스를 변환하는 것은 아님 - 멤버의 개수를 조절할 뿐

instanceof 연산 결과가 true면 검사한 타입으로 형변환이 가능하다는 것을 뜻한다

** 메서드는 오버라이딩 된 메서드가 사용되지만, 멤버변수의 경우 참조변수의 타입에 따라 달라진다

매개변수의 다형성
매개변수가 조상 참조변수면, 매개변수로 자손타입의 참조변수 다 받을 수 있다

Vector - 동적으로 크기가 관리되는 객체 배열 - add, remove, isEmpty, get, size

